Terminals unused in grammar

   FUNCTION
   ARRAY
   STRUCT_VAR


State 28 conflicts: 10 reduce/reduce
State 32 conflicts: 10 reduce/reduce
State 73 conflicts: 4 shift/reduce
State 74 conflicts: 4 shift/reduce
State 75 conflicts: 4 shift/reduce
State 76 conflicts: 4 shift/reduce
State 81 conflicts: 1 shift/reduce
State 91 conflicts: 10 reduce/reduce
State 92 conflicts: 5 shift/reduce
State 93 conflicts: 5 shift/reduce
State 94 conflicts: 5 shift/reduce
State 95 conflicts: 5 shift/reduce
State 154 conflicts: 8 shift/reduce
State 155 conflicts: 8 shift/reduce
State 156 conflicts: 8 shift/reduce
State 157 conflicts: 8 shift/reduce
State 159 conflicts: 8 shift/reduce
State 160 conflicts: 8 shift/reduce
State 165 conflicts: 1 shift/reduce
State 177 conflicts: 1 shift/reduce


Grammar

    0 $accept: start $end

    1 start: Function start
    2      | PREPROC start
    3      | Declaration start
    4      | %empty

    5 Function: Type ID '(' ')' CompoundStmt
    6         | Type ID '(' parameter_list ')' CompoundStmt

    7 parameter_list: parameter_list ',' parameter
    8               | parameter

    9 parameter: Type ID

   10 Type: INT
   11     | FLOAT
   12     | VOID

   13 CompoundStmt: '{' StmtList '}'

   14 StmtList: StmtList stmt
   15         | CompoundStmt
   16         | %empty

   17 stmt: Declaration
   18     | if
   19     | for
   20     | while
   21     | dowhile
   22     | RETURN consttype ';'
   23     | RETURN ';'
   24     | RETURN ID ';'
   25     | ';'
   26     | PRINT '(' STRING ')' ';'
   27     | CompoundStmt

   28 dowhile: DO CompoundStmt WHILE '(' expr1 ')' ';'

   29 if: IF '(' expr1 ')' CompoundStmt
   30   | IF '(' expr1 ')' CompoundStmt ELSE CompoundStmt

   31 $@1: %empty

   32 $@2: %empty

   33 for: FOR '(' expr1 ';' expr1 ';' expr1 ')' '{' $@1 StmtList $@2 '}'

   34 $@3: %empty

   35 $@4: %empty

   36 while: WHILE '(' expr1 ')' '{' $@3 StmtList $@4 '}'

   37 expr1: expr1 LE expr1
   38      | expr1 GE expr1
   39      | expr1 NE expr1
   40      | expr1 EQ expr1
   41      | expr1 INC
   42      | expr1 DEC
   43      | expr1 '>' expr1
   44      | expr1 '<' expr1
   45      | assignment1

   46 assignment: ID '=' consttype
   47           | ID '+' assignment
   48           | ID ',' assignment
   49           | consttype ',' assignment
   50           | ID
   51           | consttype

   52 assignment1: ID '=' assignment1
   53            | ID ',' assignment1
   54            | assignment2
   55            | consttype ',' assignment1
   56            | ID
   57            | ID '=' ID '(' paralist ')'
   58            | ID '(' paralist ')'
   59            | consttype

   60 paralist: paralist ',' param
   61         | param

   62 param: ID

   63 assignment2: ID '=' exp
   64            | ID '=' '(' exp ')'

   65 exp: ID
   66    | exp '+' exp
   67    | exp '-' exp
   68    | exp '*' exp
   69    | exp '/' exp
   70    | '(' exp '+' exp ')'
   71    | '(' exp '-' exp ')'
   72    | '(' exp '*' exp ')'
   73    | '(' exp '/' exp ')'
   74    | consttype

   75 consttype: NUM
   76          | REAL

   77 Declaration: Type ID '=' consttype ';'
   78            | assignment1 ';'
   79            | Type ID ';'
   80            | Type ID '[' assignment ']' ';'
   81            | STRUCT ID '{' Declaration '}' ';'
   82            | STRUCT ID ID ';'
   83            | error


Terminals, with rules where they appear

$end (0) 0
'(' (40) 5 6 26 28 29 30 33 36 57 58 64 70 71 72 73
')' (41) 5 6 26 28 29 30 33 36 57 58 64 70 71 72 73
'*' (42) 68 72
'+' (43) 47 66 70
',' (44) 7 48 49 53 55 60
'-' (45) 67 71
'/' (47) 69 73
';' (59) 22 23 24 25 26 28 33 77 78 79 80 81 82
'<' (60) 44
'=' (61) 46 52 57 63 64 77
'>' (62) 43
'[' (91) 80
']' (93) 80
'{' (123) 13 33 36 81
'}' (125) 13 33 36 81
error (256) 83
INT (258) 10
FLOAT (259) 11
VOID (260) 12
ID (261) 5 6 9 24 46 47 48 50 52 53 56 57 58 62 63 64 65 77 79 80 81
    82
NUM (262) 75
REAL (263) 76
WHILE (264) 28 36
IF (265) 29 30
RETURN (266) 22 23 24
PREPROC (267) 2
LE (268) 37
STRING (269) 26
PRINT (270) 26
FUNCTION (271)
DO (272) 28
ARRAY (273)
ELSE (274) 30
STRUCT (275) 81 82
STRUCT_VAR (276)
FOR (277) 33
GE (278) 38
EQ (279) 40
NE (280) 39
INC (281) 41
DEC (282) 42


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
start (44)
    on left: 1 2 3 4, on right: 0 1 2 3
Function (45)
    on left: 5 6, on right: 1
parameter_list (46)
    on left: 7 8, on right: 6 7
parameter (47)
    on left: 9, on right: 7 8
Type (48)
    on left: 10 11 12, on right: 5 6 9 77 79 80
CompoundStmt (49)
    on left: 13, on right: 5 6 15 27 28 29 30
StmtList (50)
    on left: 14 15 16, on right: 13 14 33 36
stmt (51)
    on left: 17 18 19 20 21 22 23 24 25 26 27, on right: 14
dowhile (52)
    on left: 28, on right: 21
if (53)
    on left: 29 30, on right: 18
for (54)
    on left: 33, on right: 19
$@1 (55)
    on left: 31, on right: 33
$@2 (56)
    on left: 32, on right: 33
while (57)
    on left: 36, on right: 20
$@3 (58)
    on left: 34, on right: 36
$@4 (59)
    on left: 35, on right: 36
expr1 (60)
    on left: 37 38 39 40 41 42 43 44 45, on right: 28 29 30 33 36 37
    38 39 40 41 42 43 44
assignment (61)
    on left: 46 47 48 49 50 51, on right: 47 48 49 80
assignment1 (62)
    on left: 52 53 54 55 56 57 58 59, on right: 45 52 53 55 78
paralist (63)
    on left: 60 61, on right: 57 58 60
param (64)
    on left: 62, on right: 60 61
assignment2 (65)
    on left: 63 64, on right: 54
exp (66)
    on left: 65 66 67 68 69 70 71 72 73 74, on right: 63 64 66 67 68
    69 70 71 72 73
consttype (67)
    on left: 75 76, on right: 22 46 49 51 55 59 74 77
Declaration (68)
    on left: 77 78 79 80 81 82 83, on right: 3 17 81


State 0

    0 $accept: . start $end

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 10
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    assignment2  go to state 14
    consttype    go to state 15
    Declaration  go to state 16


State 1

   83 Declaration: error .

    $default  reduce using rule 83 (Declaration)


State 2

   10 Type: INT .

    $default  reduce using rule 10 (Type)


State 3

   11 Type: FLOAT .

    $default  reduce using rule 11 (Type)


State 4

   12 Type: VOID .

    $default  reduce using rule 12 (Type)


State 5

   52 assignment1: ID . '=' assignment1
   53            | ID . ',' assignment1
   56            | ID .
   57            | ID . '=' ID '(' paralist ')'
   58            | ID . '(' paralist ')'
   63 assignment2: ID . '=' exp
   64            | ID . '=' '(' exp ')'

    '='  shift, and go to state 17
    '('  shift, and go to state 18
    ','  shift, and go to state 19

    $default  reduce using rule 56 (assignment1)


State 6

   75 consttype: NUM .

    $default  reduce using rule 75 (consttype)


State 7

   76 consttype: REAL .

    $default  reduce using rule 76 (consttype)


State 8

    2 start: PREPROC . start

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 20
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    assignment2  go to state 14
    consttype    go to state 15
    Declaration  go to state 16


State 9

   81 Declaration: STRUCT . ID '{' Declaration '}' ';'
   82            | STRUCT . ID ID ';'

    ID  shift, and go to state 21


State 10

    0 $accept: start . $end

    $end  shift, and go to state 22


State 11

    1 start: Function . start

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 23
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    assignment2  go to state 14
    consttype    go to state 15
    Declaration  go to state 16


State 12

    5 Function: Type . ID '(' ')' CompoundStmt
    6         | Type . ID '(' parameter_list ')' CompoundStmt
   77 Declaration: Type . ID '=' consttype ';'
   79            | Type . ID ';'
   80            | Type . ID '[' assignment ']' ';'

    ID  shift, and go to state 24


State 13

   78 Declaration: assignment1 . ';'

    ';'  shift, and go to state 25


State 14

   54 assignment1: assignment2 .

    $default  reduce using rule 54 (assignment1)


State 15

   55 assignment1: consttype . ',' assignment1
   59            | consttype .

    ','  shift, and go to state 26

    $default  reduce using rule 59 (assignment1)


State 16

    3 start: Declaration . start

    error    shift, and go to state 1
    INT      shift, and go to state 2
    FLOAT    shift, and go to state 3
    VOID     shift, and go to state 4
    ID       shift, and go to state 5
    NUM      shift, and go to state 6
    REAL     shift, and go to state 7
    PREPROC  shift, and go to state 8
    STRUCT   shift, and go to state 9

    $end  reduce using rule 4 (start)

    start        go to state 27
    Function     go to state 11
    Type         go to state 12
    assignment1  go to state 13
    assignment2  go to state 14
    consttype    go to state 15
    Declaration  go to state 16


State 17

   52 assignment1: ID '=' . assignment1
   57            | ID '=' . ID '(' paralist ')'
   63 assignment2: ID '=' . exp
   64            | ID '=' . '(' exp ')'

    ID    shift, and go to state 28
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 29

    assignment1  go to state 30
    assignment2  go to state 14
    exp          go to state 31
    consttype    go to state 32


State 18

   58 assignment1: ID '(' . paralist ')'

    ID  shift, and go to state 33

    paralist  go to state 34
    param     go to state 35


State 19

   53 assignment1: ID ',' . assignment1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment1  go to state 36
    assignment2  go to state 14
    consttype    go to state 15


State 20

    2 start: PREPROC start .

    $default  reduce using rule 2 (start)


State 21

   81 Declaration: STRUCT ID . '{' Declaration '}' ';'
   82            | STRUCT ID . ID ';'

    ID   shift, and go to state 37
    '{'  shift, and go to state 38


State 22

    0 $accept: start $end .

    $default  accept


State 23

    1 start: Function start .

    $default  reduce using rule 1 (start)


State 24

    5 Function: Type ID . '(' ')' CompoundStmt
    6         | Type ID . '(' parameter_list ')' CompoundStmt
   77 Declaration: Type ID . '=' consttype ';'
   79            | Type ID . ';'
   80            | Type ID . '[' assignment ']' ';'

    '='  shift, and go to state 39
    '('  shift, and go to state 40
    ';'  shift, and go to state 41
    '['  shift, and go to state 42


State 25

   78 Declaration: assignment1 ';' .

    $default  reduce using rule 78 (Declaration)


State 26

   55 assignment1: consttype ',' . assignment1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment1  go to state 43
    assignment2  go to state 14
    consttype    go to state 15


State 27

    3 start: Declaration start .

    $default  reduce using rule 3 (start)


State 28

   52 assignment1: ID . '=' assignment1
   53            | ID . ',' assignment1
   56            | ID .
   57            | ID . '=' ID '(' paralist ')'
   57            | ID '=' ID . '(' paralist ')'
   58            | ID . '(' paralist ')'
   63 assignment2: ID . '=' exp
   64            | ID . '=' '(' exp ')'
   65 exp: ID .

    '='  shift, and go to state 17
    '('  shift, and go to state 44
    ','  shift, and go to state 19

    LE        reduce using rule 56 (assignment1)
    LE        [reduce using rule 65 (exp)]
    GE        reduce using rule 56 (assignment1)
    GE        [reduce using rule 65 (exp)]
    EQ        reduce using rule 56 (assignment1)
    EQ        [reduce using rule 65 (exp)]
    NE        reduce using rule 56 (assignment1)
    NE        [reduce using rule 65 (exp)]
    INC       reduce using rule 56 (assignment1)
    INC       [reduce using rule 65 (exp)]
    DEC       reduce using rule 56 (assignment1)
    DEC       [reduce using rule 65 (exp)]
    ')'       reduce using rule 56 (assignment1)
    ')'       [reduce using rule 65 (exp)]
    ';'       reduce using rule 56 (assignment1)
    ';'       [reduce using rule 65 (exp)]
    '>'       reduce using rule 56 (assignment1)
    '>'       [reduce using rule 65 (exp)]
    '<'       reduce using rule 56 (assignment1)
    '<'       [reduce using rule 65 (exp)]
    '+'       reduce using rule 65 (exp)
    '-'       reduce using rule 65 (exp)
    '*'       reduce using rule 65 (exp)
    '/'       reduce using rule 65 (exp)
    $default  reduce using rule 56 (assignment1)


State 29

   64 assignment2: ID '=' '(' . exp ')'
   70 exp: '(' . exp '+' exp ')'
   71    | '(' . exp '-' exp ')'
   72    | '(' . exp '*' exp ')'
   73    | '(' . exp '/' exp ')'

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 47
    consttype  go to state 48


State 30

   52 assignment1: ID '=' assignment1 .

    $default  reduce using rule 52 (assignment1)


State 31

   63 assignment2: ID '=' exp .
   66 exp: exp . '+' exp
   67    | exp . '-' exp
   68    | exp . '*' exp
   69    | exp . '/' exp

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    $default  reduce using rule 63 (assignment2)


State 32

   55 assignment1: consttype . ',' assignment1
   59            | consttype .
   74 exp: consttype .

    ','  shift, and go to state 26

    LE        reduce using rule 59 (assignment1)
    LE        [reduce using rule 74 (exp)]
    GE        reduce using rule 59 (assignment1)
    GE        [reduce using rule 74 (exp)]
    EQ        reduce using rule 59 (assignment1)
    EQ        [reduce using rule 74 (exp)]
    NE        reduce using rule 59 (assignment1)
    NE        [reduce using rule 74 (exp)]
    INC       reduce using rule 59 (assignment1)
    INC       [reduce using rule 74 (exp)]
    DEC       reduce using rule 59 (assignment1)
    DEC       [reduce using rule 74 (exp)]
    ')'       reduce using rule 59 (assignment1)
    ')'       [reduce using rule 74 (exp)]
    ';'       reduce using rule 59 (assignment1)
    ';'       [reduce using rule 74 (exp)]
    '>'       reduce using rule 59 (assignment1)
    '>'       [reduce using rule 74 (exp)]
    '<'       reduce using rule 59 (assignment1)
    '<'       [reduce using rule 74 (exp)]
    '+'       reduce using rule 74 (exp)
    '-'       reduce using rule 74 (exp)
    '*'       reduce using rule 74 (exp)
    '/'       reduce using rule 74 (exp)
    $default  reduce using rule 59 (assignment1)


State 33

   62 param: ID .

    $default  reduce using rule 62 (param)


State 34

   58 assignment1: ID '(' paralist . ')'
   60 paralist: paralist . ',' param

    ')'  shift, and go to state 53
    ','  shift, and go to state 54


State 35

   61 paralist: param .

    $default  reduce using rule 61 (paralist)


State 36

   53 assignment1: ID ',' assignment1 .

    $default  reduce using rule 53 (assignment1)


State 37

   82 Declaration: STRUCT ID ID . ';'

    ';'  shift, and go to state 55


State 38

   81 Declaration: STRUCT ID '{' . Declaration '}' ';'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    ID      shift, and go to state 5
    NUM     shift, and go to state 6
    REAL    shift, and go to state 7
    STRUCT  shift, and go to state 9

    Type         go to state 56
    assignment1  go to state 13
    assignment2  go to state 14
    consttype    go to state 15
    Declaration  go to state 57


State 39

   77 Declaration: Type ID '=' . consttype ';'

    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    consttype  go to state 58


State 40

    5 Function: Type ID '(' . ')' CompoundStmt
    6         | Type ID '(' . parameter_list ')' CompoundStmt

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4
    ')'    shift, and go to state 59

    parameter_list  go to state 60
    parameter       go to state 61
    Type            go to state 62


State 41

   79 Declaration: Type ID ';' .

    $default  reduce using rule 79 (Declaration)


State 42

   80 Declaration: Type ID '[' . assignment ']' ';'

    ID    shift, and go to state 63
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 64
    consttype   go to state 65


State 43

   55 assignment1: consttype ',' assignment1 .

    $default  reduce using rule 55 (assignment1)


State 44

   57 assignment1: ID '=' ID '(' . paralist ')'
   58            | ID '(' . paralist ')'

    ID  shift, and go to state 33

    paralist  go to state 66
    param     go to state 35


State 45

   65 exp: ID .

    $default  reduce using rule 65 (exp)


State 46

   70 exp: '(' . exp '+' exp ')'
   71    | '(' . exp '-' exp ')'
   72    | '(' . exp '*' exp ')'
   73    | '(' . exp '/' exp ')'

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 67
    consttype  go to state 48


State 47

   64 assignment2: ID '=' '(' exp . ')'
   66 exp: exp . '+' exp
   67    | exp . '-' exp
   68    | exp . '*' exp
   69    | exp . '/' exp
   70    | '(' exp . '+' exp ')'
   71    | '(' exp . '-' exp ')'
   72    | '(' exp . '*' exp ')'
   73    | '(' exp . '/' exp ')'

    ')'  shift, and go to state 68
    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72


State 48

   74 exp: consttype .

    $default  reduce using rule 74 (exp)


State 49

   66 exp: exp '+' . exp

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 73
    consttype  go to state 48


State 50

   67 exp: exp '-' . exp

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 74
    consttype  go to state 48


State 51

   68 exp: exp '*' . exp

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 75
    consttype  go to state 48


State 52

   69 exp: exp '/' . exp

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 76
    consttype  go to state 48


State 53

   58 assignment1: ID '(' paralist ')' .

    $default  reduce using rule 58 (assignment1)


State 54

   60 paralist: paralist ',' . param

    ID  shift, and go to state 33

    param  go to state 77


State 55

   82 Declaration: STRUCT ID ID ';' .

    $default  reduce using rule 82 (Declaration)


State 56

   77 Declaration: Type . ID '=' consttype ';'
   79            | Type . ID ';'
   80            | Type . ID '[' assignment ']' ';'

    ID  shift, and go to state 78


State 57

   81 Declaration: STRUCT ID '{' Declaration . '}' ';'

    '}'  shift, and go to state 79


State 58

   77 Declaration: Type ID '=' consttype . ';'

    ';'  shift, and go to state 80


State 59

    5 Function: Type ID '(' ')' . CompoundStmt

    '{'  shift, and go to state 81

    CompoundStmt  go to state 82


State 60

    6 Function: Type ID '(' parameter_list . ')' CompoundStmt
    7 parameter_list: parameter_list . ',' parameter

    ')'  shift, and go to state 83
    ','  shift, and go to state 84


State 61

    8 parameter_list: parameter .

    $default  reduce using rule 8 (parameter_list)


State 62

    9 parameter: Type . ID

    ID  shift, and go to state 85


State 63

   46 assignment: ID . '=' consttype
   47           | ID . '+' assignment
   48           | ID . ',' assignment
   50           | ID .

    '='  shift, and go to state 86
    ','  shift, and go to state 87
    '+'  shift, and go to state 88

    $default  reduce using rule 50 (assignment)


State 64

   80 Declaration: Type ID '[' assignment . ']' ';'

    ']'  shift, and go to state 89


State 65

   49 assignment: consttype . ',' assignment
   51           | consttype .

    ','  shift, and go to state 90

    $default  reduce using rule 51 (assignment)


State 66

   57 assignment1: ID '=' ID '(' paralist . ')'
   58            | ID '(' paralist . ')'
   60 paralist: paralist . ',' param

    ')'  shift, and go to state 91
    ','  shift, and go to state 54


State 67

   66 exp: exp . '+' exp
   67    | exp . '-' exp
   68    | exp . '*' exp
   69    | exp . '/' exp
   70    | '(' exp . '+' exp ')'
   71    | '(' exp . '-' exp ')'
   72    | '(' exp . '*' exp ')'
   73    | '(' exp . '/' exp ')'

    '+'  shift, and go to state 69
    '-'  shift, and go to state 70
    '*'  shift, and go to state 71
    '/'  shift, and go to state 72


State 68

   64 assignment2: ID '=' '(' exp ')' .

    $default  reduce using rule 64 (assignment2)


State 69

   66 exp: exp '+' . exp
   70    | '(' exp '+' . exp ')'

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 92
    consttype  go to state 48


State 70

   67 exp: exp '-' . exp
   71    | '(' exp '-' . exp ')'

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 93
    consttype  go to state 48


State 71

   68 exp: exp '*' . exp
   72    | '(' exp '*' . exp ')'

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 94
    consttype  go to state 48


State 72

   69 exp: exp '/' . exp
   73    | '(' exp '/' . exp ')'

    ID    shift, and go to state 45
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    '('   shift, and go to state 46

    exp        go to state 95
    consttype  go to state 48


State 73

   66 exp: exp . '+' exp
   66    | exp '+' exp .
   67    | exp . '-' exp
   68    | exp . '*' exp
   69    | exp . '/' exp

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    '+'       [reduce using rule 66 (exp)]
    '-'       [reduce using rule 66 (exp)]
    '*'       [reduce using rule 66 (exp)]
    '/'       [reduce using rule 66 (exp)]
    $default  reduce using rule 66 (exp)


State 74

   66 exp: exp . '+' exp
   67    | exp . '-' exp
   67    | exp '-' exp .
   68    | exp . '*' exp
   69    | exp . '/' exp

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    '+'       [reduce using rule 67 (exp)]
    '-'       [reduce using rule 67 (exp)]
    '*'       [reduce using rule 67 (exp)]
    '/'       [reduce using rule 67 (exp)]
    $default  reduce using rule 67 (exp)


State 75

   66 exp: exp . '+' exp
   67    | exp . '-' exp
   68    | exp . '*' exp
   68    | exp '*' exp .
   69    | exp . '/' exp

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    '+'       [reduce using rule 68 (exp)]
    '-'       [reduce using rule 68 (exp)]
    '*'       [reduce using rule 68 (exp)]
    '/'       [reduce using rule 68 (exp)]
    $default  reduce using rule 68 (exp)


State 76

   66 exp: exp . '+' exp
   67    | exp . '-' exp
   68    | exp . '*' exp
   69    | exp . '/' exp
   69    | exp '/' exp .

    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    '+'       [reduce using rule 69 (exp)]
    '-'       [reduce using rule 69 (exp)]
    '*'       [reduce using rule 69 (exp)]
    '/'       [reduce using rule 69 (exp)]
    $default  reduce using rule 69 (exp)


State 77

   60 paralist: paralist ',' param .

    $default  reduce using rule 60 (paralist)


State 78

   77 Declaration: Type ID . '=' consttype ';'
   79            | Type ID . ';'
   80            | Type ID . '[' assignment ']' ';'

    '='  shift, and go to state 39
    ';'  shift, and go to state 41
    '['  shift, and go to state 42


State 79

   81 Declaration: STRUCT ID '{' Declaration '}' . ';'

    ';'  shift, and go to state 96


State 80

   77 Declaration: Type ID '=' consttype ';' .

    $default  reduce using rule 77 (Declaration)


State 81

   13 CompoundStmt: '{' . StmtList '}'

    '{'  shift, and go to state 81

    '{'       [reduce using rule 16 (StmtList)]
    $default  reduce using rule 16 (StmtList)

    CompoundStmt  go to state 97
    StmtList      go to state 98


State 82

    5 Function: Type ID '(' ')' CompoundStmt .

    $default  reduce using rule 5 (Function)


State 83

    6 Function: Type ID '(' parameter_list ')' . CompoundStmt

    '{'  shift, and go to state 81

    CompoundStmt  go to state 99


State 84

    7 parameter_list: parameter_list ',' . parameter

    INT    shift, and go to state 2
    FLOAT  shift, and go to state 3
    VOID   shift, and go to state 4

    parameter  go to state 100
    Type       go to state 62


State 85

    9 parameter: Type ID .

    $default  reduce using rule 9 (parameter)


State 86

   46 assignment: ID '=' . consttype

    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    consttype  go to state 101


State 87

   48 assignment: ID ',' . assignment

    ID    shift, and go to state 63
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 102
    consttype   go to state 65


State 88

   47 assignment: ID '+' . assignment

    ID    shift, and go to state 63
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 103
    consttype   go to state 65


State 89

   80 Declaration: Type ID '[' assignment ']' . ';'

    ';'  shift, and go to state 104


State 90

   49 assignment: consttype ',' . assignment

    ID    shift, and go to state 63
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    assignment  go to state 105
    consttype   go to state 65


State 91

   57 assignment1: ID '=' ID '(' paralist ')' .
   58            | ID '(' paralist ')' .

    LE        reduce using rule 57 (assignment1)
    LE        [reduce using rule 58 (assignment1)]
    GE        reduce using rule 57 (assignment1)
    GE        [reduce using rule 58 (assignment1)]
    EQ        reduce using rule 57 (assignment1)
    EQ        [reduce using rule 58 (assignment1)]
    NE        reduce using rule 57 (assignment1)
    NE        [reduce using rule 58 (assignment1)]
    INC       reduce using rule 57 (assignment1)
    INC       [reduce using rule 58 (assignment1)]
    DEC       reduce using rule 57 (assignment1)
    DEC       [reduce using rule 58 (assignment1)]
    ')'       reduce using rule 57 (assignment1)
    ')'       [reduce using rule 58 (assignment1)]
    ';'       reduce using rule 57 (assignment1)
    ';'       [reduce using rule 58 (assignment1)]
    '>'       reduce using rule 57 (assignment1)
    '>'       [reduce using rule 58 (assignment1)]
    '<'       reduce using rule 57 (assignment1)
    '<'       [reduce using rule 58 (assignment1)]
    $default  reduce using rule 57 (assignment1)


State 92

   66 exp: exp . '+' exp
   66    | exp '+' exp .
   67    | exp . '-' exp
   68    | exp . '*' exp
   69    | exp . '/' exp
   70    | '(' exp '+' exp . ')'

    ')'  shift, and go to state 106
    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    ')'  [reduce using rule 66 (exp)]
    '+'  [reduce using rule 66 (exp)]
    '-'  [reduce using rule 66 (exp)]
    '*'  [reduce using rule 66 (exp)]
    '/'  [reduce using rule 66 (exp)]


State 93

   66 exp: exp . '+' exp
   67    | exp . '-' exp
   67    | exp '-' exp .
   68    | exp . '*' exp
   69    | exp . '/' exp
   71    | '(' exp '-' exp . ')'

    ')'  shift, and go to state 107
    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    ')'  [reduce using rule 67 (exp)]
    '+'  [reduce using rule 67 (exp)]
    '-'  [reduce using rule 67 (exp)]
    '*'  [reduce using rule 67 (exp)]
    '/'  [reduce using rule 67 (exp)]


State 94

   66 exp: exp . '+' exp
   67    | exp . '-' exp
   68    | exp . '*' exp
   68    | exp '*' exp .
   69    | exp . '/' exp
   72    | '(' exp '*' exp . ')'

    ')'  shift, and go to state 108
    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    ')'  [reduce using rule 68 (exp)]
    '+'  [reduce using rule 68 (exp)]
    '-'  [reduce using rule 68 (exp)]
    '*'  [reduce using rule 68 (exp)]
    '/'  [reduce using rule 68 (exp)]


State 95

   66 exp: exp . '+' exp
   67    | exp . '-' exp
   68    | exp . '*' exp
   69    | exp . '/' exp
   69    | exp '/' exp .
   73    | '(' exp '/' exp . ')'

    ')'  shift, and go to state 109
    '+'  shift, and go to state 49
    '-'  shift, and go to state 50
    '*'  shift, and go to state 51
    '/'  shift, and go to state 52

    ')'  [reduce using rule 69 (exp)]
    '+'  [reduce using rule 69 (exp)]
    '-'  [reduce using rule 69 (exp)]
    '*'  [reduce using rule 69 (exp)]
    '/'  [reduce using rule 69 (exp)]


State 96

   81 Declaration: STRUCT ID '{' Declaration '}' ';' .

    $default  reduce using rule 81 (Declaration)


State 97

   15 StmtList: CompoundStmt .

    $default  reduce using rule 15 (StmtList)


State 98

   13 CompoundStmt: '{' StmtList . '}'
   14 StmtList: StmtList . stmt

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    ID      shift, and go to state 5
    NUM     shift, and go to state 6
    REAL    shift, and go to state 7
    WHILE   shift, and go to state 110
    IF      shift, and go to state 111
    RETURN  shift, and go to state 112
    PRINT   shift, and go to state 113
    DO      shift, and go to state 114
    STRUCT  shift, and go to state 9
    FOR     shift, and go to state 115
    '{'     shift, and go to state 81
    '}'     shift, and go to state 116
    ';'     shift, and go to state 117

    Type          go to state 56
    CompoundStmt  go to state 118
    stmt          go to state 119
    dowhile       go to state 120
    if            go to state 121
    for           go to state 122
    while         go to state 123
    assignment1   go to state 13
    assignment2   go to state 14
    consttype     go to state 15
    Declaration   go to state 124


State 99

    6 Function: Type ID '(' parameter_list ')' CompoundStmt .

    $default  reduce using rule 6 (Function)


State 100

    7 parameter_list: parameter_list ',' parameter .

    $default  reduce using rule 7 (parameter_list)


State 101

   46 assignment: ID '=' consttype .

    $default  reduce using rule 46 (assignment)


State 102

   48 assignment: ID ',' assignment .

    $default  reduce using rule 48 (assignment)


State 103

   47 assignment: ID '+' assignment .

    $default  reduce using rule 47 (assignment)


State 104

   80 Declaration: Type ID '[' assignment ']' ';' .

    $default  reduce using rule 80 (Declaration)


State 105

   49 assignment: consttype ',' assignment .

    $default  reduce using rule 49 (assignment)


State 106

   70 exp: '(' exp '+' exp ')' .

    $default  reduce using rule 70 (exp)


State 107

   71 exp: '(' exp '-' exp ')' .

    $default  reduce using rule 71 (exp)


State 108

   72 exp: '(' exp '*' exp ')' .

    $default  reduce using rule 72 (exp)


State 109

   73 exp: '(' exp '/' exp ')' .

    $default  reduce using rule 73 (exp)


State 110

   36 while: WHILE . '(' expr1 ')' '{' $@3 StmtList $@4 '}'

    '('  shift, and go to state 125


State 111

   29 if: IF . '(' expr1 ')' CompoundStmt
   30   | IF . '(' expr1 ')' CompoundStmt ELSE CompoundStmt

    '('  shift, and go to state 126


State 112

   22 stmt: RETURN . consttype ';'
   23     | RETURN . ';'
   24     | RETURN . ID ';'

    ID    shift, and go to state 127
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7
    ';'   shift, and go to state 128

    consttype  go to state 129


State 113

   26 stmt: PRINT . '(' STRING ')' ';'

    '('  shift, and go to state 130


State 114

   28 dowhile: DO . CompoundStmt WHILE '(' expr1 ')' ';'

    '{'  shift, and go to state 81

    CompoundStmt  go to state 131


State 115

   33 for: FOR . '(' expr1 ';' expr1 ';' expr1 ')' '{' $@1 StmtList $@2 '}'

    '('  shift, and go to state 132


State 116

   13 CompoundStmt: '{' StmtList '}' .

    $default  reduce using rule 13 (CompoundStmt)


State 117

   25 stmt: ';' .

    $default  reduce using rule 25 (stmt)


State 118

   27 stmt: CompoundStmt .

    $default  reduce using rule 27 (stmt)


State 119

   14 StmtList: StmtList stmt .

    $default  reduce using rule 14 (StmtList)


State 120

   21 stmt: dowhile .

    $default  reduce using rule 21 (stmt)


State 121

   18 stmt: if .

    $default  reduce using rule 18 (stmt)


State 122

   19 stmt: for .

    $default  reduce using rule 19 (stmt)


State 123

   20 stmt: while .

    $default  reduce using rule 20 (stmt)


State 124

   17 stmt: Declaration .

    $default  reduce using rule 17 (stmt)


State 125

   36 while: WHILE '(' . expr1 ')' '{' $@3 StmtList $@4 '}'

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 133
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 126

   29 if: IF '(' . expr1 ')' CompoundStmt
   30   | IF '(' . expr1 ')' CompoundStmt ELSE CompoundStmt

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 135
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 127

   24 stmt: RETURN ID . ';'

    ';'  shift, and go to state 136


State 128

   23 stmt: RETURN ';' .

    $default  reduce using rule 23 (stmt)


State 129

   22 stmt: RETURN consttype . ';'

    ';'  shift, and go to state 137


State 130

   26 stmt: PRINT '(' . STRING ')' ';'

    STRING  shift, and go to state 138


State 131

   28 dowhile: DO CompoundStmt . WHILE '(' expr1 ')' ';'

    WHILE  shift, and go to state 139


State 132

   33 for: FOR '(' . expr1 ';' expr1 ';' expr1 ')' '{' $@1 StmtList $@2 '}'

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 140
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 133

   36 while: WHILE '(' expr1 . ')' '{' $@3 StmtList $@4 '}'
   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    ')'  shift, and go to state 147
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149


State 134

   45 expr1: assignment1 .

    $default  reduce using rule 45 (expr1)


State 135

   29 if: IF '(' expr1 . ')' CompoundStmt
   30   | IF '(' expr1 . ')' CompoundStmt ELSE CompoundStmt
   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    ')'  shift, and go to state 150
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149


State 136

   24 stmt: RETURN ID ';' .

    $default  reduce using rule 24 (stmt)


State 137

   22 stmt: RETURN consttype ';' .

    $default  reduce using rule 22 (stmt)


State 138

   26 stmt: PRINT '(' STRING . ')' ';'

    ')'  shift, and go to state 151


State 139

   28 dowhile: DO CompoundStmt WHILE . '(' expr1 ')' ';'

    '('  shift, and go to state 152


State 140

   33 for: FOR '(' expr1 . ';' expr1 ';' expr1 ')' '{' $@1 StmtList $@2 '}'
   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    ';'  shift, and go to state 153
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149


State 141

   37 expr1: expr1 LE . expr1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 154
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 142

   38 expr1: expr1 GE . expr1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 155
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 143

   40 expr1: expr1 EQ . expr1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 156
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 144

   39 expr1: expr1 NE . expr1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 157
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 145

   41 expr1: expr1 INC .

    $default  reduce using rule 41 (expr1)


State 146

   42 expr1: expr1 DEC .

    $default  reduce using rule 42 (expr1)


State 147

   36 while: WHILE '(' expr1 ')' . '{' $@3 StmtList $@4 '}'

    '{'  shift, and go to state 158


State 148

   43 expr1: expr1 '>' . expr1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 159
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 149

   44 expr1: expr1 '<' . expr1

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 160
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 150

   29 if: IF '(' expr1 ')' . CompoundStmt
   30   | IF '(' expr1 ')' . CompoundStmt ELSE CompoundStmt

    '{'  shift, and go to state 81

    CompoundStmt  go to state 161


State 151

   26 stmt: PRINT '(' STRING ')' . ';'

    ';'  shift, and go to state 162


State 152

   28 dowhile: DO CompoundStmt WHILE '(' . expr1 ')' ';'

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 163
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 153

   33 for: FOR '(' expr1 ';' . expr1 ';' expr1 ')' '{' $@1 StmtList $@2 '}'

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 164
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 154

   37 expr1: expr1 . LE expr1
   37      | expr1 LE expr1 .
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149

    LE        [reduce using rule 37 (expr1)]
    GE        [reduce using rule 37 (expr1)]
    EQ        [reduce using rule 37 (expr1)]
    NE        [reduce using rule 37 (expr1)]
    INC       [reduce using rule 37 (expr1)]
    DEC       [reduce using rule 37 (expr1)]
    '>'       [reduce using rule 37 (expr1)]
    '<'       [reduce using rule 37 (expr1)]
    $default  reduce using rule 37 (expr1)


State 155

   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   38      | expr1 GE expr1 .
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149

    LE        [reduce using rule 38 (expr1)]
    GE        [reduce using rule 38 (expr1)]
    EQ        [reduce using rule 38 (expr1)]
    NE        [reduce using rule 38 (expr1)]
    INC       [reduce using rule 38 (expr1)]
    DEC       [reduce using rule 38 (expr1)]
    '>'       [reduce using rule 38 (expr1)]
    '<'       [reduce using rule 38 (expr1)]
    $default  reduce using rule 38 (expr1)


State 156

   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   40      | expr1 EQ expr1 .
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149

    LE        [reduce using rule 40 (expr1)]
    GE        [reduce using rule 40 (expr1)]
    EQ        [reduce using rule 40 (expr1)]
    NE        [reduce using rule 40 (expr1)]
    INC       [reduce using rule 40 (expr1)]
    DEC       [reduce using rule 40 (expr1)]
    '>'       [reduce using rule 40 (expr1)]
    '<'       [reduce using rule 40 (expr1)]
    $default  reduce using rule 40 (expr1)


State 157

   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   39      | expr1 NE expr1 .
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149

    LE        [reduce using rule 39 (expr1)]
    GE        [reduce using rule 39 (expr1)]
    EQ        [reduce using rule 39 (expr1)]
    NE        [reduce using rule 39 (expr1)]
    INC       [reduce using rule 39 (expr1)]
    DEC       [reduce using rule 39 (expr1)]
    '>'       [reduce using rule 39 (expr1)]
    '<'       [reduce using rule 39 (expr1)]
    $default  reduce using rule 39 (expr1)


State 158

   36 while: WHILE '(' expr1 ')' '{' . $@3 StmtList $@4 '}'

    $default  reduce using rule 34 ($@3)

    $@3  go to state 165


State 159

   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   43      | expr1 '>' expr1 .
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149

    LE        [reduce using rule 43 (expr1)]
    GE        [reduce using rule 43 (expr1)]
    EQ        [reduce using rule 43 (expr1)]
    NE        [reduce using rule 43 (expr1)]
    INC       [reduce using rule 43 (expr1)]
    DEC       [reduce using rule 43 (expr1)]
    '>'       [reduce using rule 43 (expr1)]
    '<'       [reduce using rule 43 (expr1)]
    $default  reduce using rule 43 (expr1)


State 160

   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1
   44      | expr1 '<' expr1 .

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149

    LE        [reduce using rule 44 (expr1)]
    GE        [reduce using rule 44 (expr1)]
    EQ        [reduce using rule 44 (expr1)]
    NE        [reduce using rule 44 (expr1)]
    INC       [reduce using rule 44 (expr1)]
    DEC       [reduce using rule 44 (expr1)]
    '>'       [reduce using rule 44 (expr1)]
    '<'       [reduce using rule 44 (expr1)]
    $default  reduce using rule 44 (expr1)


State 161

   29 if: IF '(' expr1 ')' CompoundStmt .
   30   | IF '(' expr1 ')' CompoundStmt . ELSE CompoundStmt

    ELSE  shift, and go to state 166

    $default  reduce using rule 29 (if)


State 162

   26 stmt: PRINT '(' STRING ')' ';' .

    $default  reduce using rule 26 (stmt)


State 163

   28 dowhile: DO CompoundStmt WHILE '(' expr1 . ')' ';'
   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    ')'  shift, and go to state 167
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149


State 164

   33 for: FOR '(' expr1 ';' expr1 . ';' expr1 ')' '{' $@1 StmtList $@2 '}'
   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    ';'  shift, and go to state 168
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149


State 165

   36 while: WHILE '(' expr1 ')' '{' $@3 . StmtList $@4 '}'

    '{'  shift, and go to state 81

    '{'       [reduce using rule 16 (StmtList)]
    $default  reduce using rule 16 (StmtList)

    CompoundStmt  go to state 97
    StmtList      go to state 169


State 166

   30 if: IF '(' expr1 ')' CompoundStmt ELSE . CompoundStmt

    '{'  shift, and go to state 81

    CompoundStmt  go to state 170


State 167

   28 dowhile: DO CompoundStmt WHILE '(' expr1 ')' . ';'

    ';'  shift, and go to state 171


State 168

   33 for: FOR '(' expr1 ';' expr1 ';' . expr1 ')' '{' $@1 StmtList $@2 '}'

    ID    shift, and go to state 5
    NUM   shift, and go to state 6
    REAL  shift, and go to state 7

    expr1        go to state 172
    assignment1  go to state 134
    assignment2  go to state 14
    consttype    go to state 15


State 169

   14 StmtList: StmtList . stmt
   36 while: WHILE '(' expr1 ')' '{' $@3 StmtList . $@4 '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    ID      shift, and go to state 5
    NUM     shift, and go to state 6
    REAL    shift, and go to state 7
    WHILE   shift, and go to state 110
    IF      shift, and go to state 111
    RETURN  shift, and go to state 112
    PRINT   shift, and go to state 113
    DO      shift, and go to state 114
    STRUCT  shift, and go to state 9
    FOR     shift, and go to state 115
    '{'     shift, and go to state 81
    ';'     shift, and go to state 117

    '}'  reduce using rule 35 ($@4)

    Type          go to state 56
    CompoundStmt  go to state 118
    stmt          go to state 119
    dowhile       go to state 120
    if            go to state 121
    for           go to state 122
    while         go to state 123
    $@4           go to state 173
    assignment1   go to state 13
    assignment2   go to state 14
    consttype     go to state 15
    Declaration   go to state 124


State 170

   30 if: IF '(' expr1 ')' CompoundStmt ELSE CompoundStmt .

    $default  reduce using rule 30 (if)


State 171

   28 dowhile: DO CompoundStmt WHILE '(' expr1 ')' ';' .

    $default  reduce using rule 28 (dowhile)


State 172

   33 for: FOR '(' expr1 ';' expr1 ';' expr1 . ')' '{' $@1 StmtList $@2 '}'
   37 expr1: expr1 . LE expr1
   38      | expr1 . GE expr1
   39      | expr1 . NE expr1
   40      | expr1 . EQ expr1
   41      | expr1 . INC
   42      | expr1 . DEC
   43      | expr1 . '>' expr1
   44      | expr1 . '<' expr1

    LE   shift, and go to state 141
    GE   shift, and go to state 142
    EQ   shift, and go to state 143
    NE   shift, and go to state 144
    INC  shift, and go to state 145
    DEC  shift, and go to state 146
    ')'  shift, and go to state 174
    '>'  shift, and go to state 148
    '<'  shift, and go to state 149


State 173

   36 while: WHILE '(' expr1 ')' '{' $@3 StmtList $@4 . '}'

    '}'  shift, and go to state 175


State 174

   33 for: FOR '(' expr1 ';' expr1 ';' expr1 ')' . '{' $@1 StmtList $@2 '}'

    '{'  shift, and go to state 176


State 175

   36 while: WHILE '(' expr1 ')' '{' $@3 StmtList $@4 '}' .

    $default  reduce using rule 36 (while)


State 176

   33 for: FOR '(' expr1 ';' expr1 ';' expr1 ')' '{' . $@1 StmtList $@2 '}'

    $default  reduce using rule 31 ($@1)

    $@1  go to state 177


State 177

   33 for: FOR '(' expr1 ';' expr1 ';' expr1 ')' '{' $@1 . StmtList $@2 '}'

    '{'  shift, and go to state 81

    '{'       [reduce using rule 16 (StmtList)]
    $default  reduce using rule 16 (StmtList)

    CompoundStmt  go to state 97
    StmtList      go to state 178


State 178

   14 StmtList: StmtList . stmt
   33 for: FOR '(' expr1 ';' expr1 ';' expr1 ')' '{' $@1 StmtList . $@2 '}'

    error   shift, and go to state 1
    INT     shift, and go to state 2
    FLOAT   shift, and go to state 3
    VOID    shift, and go to state 4
    ID      shift, and go to state 5
    NUM     shift, and go to state 6
    REAL    shift, and go to state 7
    WHILE   shift, and go to state 110
    IF      shift, and go to state 111
    RETURN  shift, and go to state 112
    PRINT   shift, and go to state 113
    DO      shift, and go to state 114
    STRUCT  shift, and go to state 9
    FOR     shift, and go to state 115
    '{'     shift, and go to state 81
    ';'     shift, and go to state 117

    '}'  reduce using rule 32 ($@2)

    Type          go to state 56
    CompoundStmt  go to state 118
    stmt          go to state 119
    dowhile       go to state 120
    if            go to state 121
    for           go to state 122
    $@2           go to state 179
    while         go to state 123
    assignment1   go to state 13
    assignment2   go to state 14
    consttype     go to state 15
    Declaration   go to state 124


State 179

   33 for: FOR '(' expr1 ';' expr1 ';' expr1 ')' '{' $@1 StmtList $@2 . '}'

    '}'  shift, and go to state 180


State 180

   33 for: FOR '(' expr1 ';' expr1 ';' expr1 ')' '{' $@1 StmtList $@2 '}' .

    $default  reduce using rule 33 (for)
